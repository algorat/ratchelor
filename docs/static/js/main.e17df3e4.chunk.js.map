{"version":3,"sources":["components/IntroScreen.js","components/RatSelect.js","components/TalkingToRats.js","components/RoseCeremony.js","components/AnimeEnding.js","sounds/Cheerful.mp3","sounds/Funky.mp3","sounds/Intense.mp3","sounds/Intro_Screen.mp3","sounds/Paris.mp3","sounds/Pop.mp3","sounds/Romantic_Happy.mp3","sounds/Romantic_Sad.mp3","sounds/Rose_Ceremony.mp3","components/MusicManager.js","sounds/Talking_To_Rat_1.mp3","sounds/Talking_To_Rat_2.mp3","sounds/Talking_To_Rat_3.mp3","sounds/Talking_To_Rat_4.mp3","App.js","index.js"],"names":["IntroScreen","props","state","opacity","this","fadeInterval","window","setInterval","onClick","clearInterval","setState","id","className","style","bind","React","Component","RatSelect","onClickSelectRats","setActiveRats","selectedRats","advanceState","selectRatsButton","document","getElementById","classList","remove","numRatsInGame","length","add","ratName","element","indexOf","index","newSelectedRats","splice","multiContestantsLeft","oneContestantLeft","push","noContestantsLeft","ratsList","i","filename","rats","filenameHearts","selectRat","name","src","alt","tagline","OFF_BOTTOM","TalkingToRats","ratNames","activeRatNames","sort","a","b","Math","random","activeRats","map","getRatByName","responses","responsesJson","charSpeed","ratMoveSpeed","ratIndex","charsRevealed","ratLeft","ratTop","dialogueBottom","incr","sendRatIn","getRandomResponses","ratMoveOutInterval","ratMoveInInterval","startTextMoving","setNextRat","textInterval","dialogue","round","newRatIndex","goToRoseCeremony","changeCurrentRatIdx","sendRatOut","responseText","responseDiv","submitResponse","ratDialogue","substring","left","top","bottom","RoseCeremony","numRoses","giveRosesButton","endRoseCeremony","roseContainer","AnimeEnding","finalRat","restartGame","TalkingMusic","Endings","CHEERFUL","Cheerful","FUNKY","Funky","INTENSE","Intense","PARIS","Paris","POP","Pop","ROMANTICHAPPY","RomanticHappy","ROMANTICSAD","RomanticSad","MusicManager","url","phase","RAT_SELECT","TALKING_TO_RATS","currentRatIdx","ROSE_CEREMONY","ANIME_ENDING","ending","playStatus","Sound","status","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","loop","RatchelorGame","numRounds","rosesPerRound","gameStage","roundNum","interludeText","idx","ratsJson","screen","newRoundNum","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e17df3e4.chunk.js","sourcesContent":["import React from \"react\";\n\nclass IntroScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opacity: 1,\n    }\n  }\n\n  onClick() {\n    this.fadeInterval = window.setInterval(() => {\n      let opacity = this.state.opacity - 0.01;\n      if (opacity <= 0) {\n        this.props.onClick();\n        window.clearInterval(this.fadeInterval);\n      } else {\n        this.setState({opacity});\n      }\n    }, 5);\n  }\n\n  render() {\n    return (\n      <div id=\"introScreen\" className=\"screen\" style={{opacity: this.state.opacity}}>\n        <button onClick={this.onClick.bind(this)}>Embark</button>\n        <div id=\"hideme\"/>\n    </div>\n    );\n  }\n}\n\nexport default IntroScreen;\n\n","import React from \"react\";\n\nclass RatSelect extends React.Component {\n  constructor() {\n    super();\n\n    // Once you've select the rats, advance to the next stage\n    this.onClickSelectRats = () => {\n      this.props.setActiveRats(this.state.selectedRats);\n      this.props.advanceState();\n    }\n\n    this.state = {\n      selectedRats: [],\n      selectRatsButton: <div id=\"chooseText\">Select your 7 contestants</div>\n    }\n  }\n\n  noContestantsLeft() {\n    let selectRatsButton = <div id=\"chooseText\"><button onClick={this.onClickSelectRats}>Continue</button></div>\n    this.setState({selectRatsButton});\n    document.getElementById(\"ratListContainer\").classList.remove(\"stillRats\");\n  }\n\n  oneContestantLeft() {\n    let selectRatsButton = <div id=\"chooseText\">{`Select ${this.props.numRatsInGame - this.state.selectedRats.length} more contestant`}</div>\n    this.setState({selectRatsButton});\n    document.getElementById(\"ratListContainer\").classList.add(\"stillRats\");\n  }\n\n  multiContestantsLeft() {\n    let selectRatsButton = <div id=\"chooseText\">{`Select ${this.props.numRatsInGame - this.state.selectedRats.length} more contestants`}</div>\n    this.setState({selectRatsButton});\n  }\n\n\n\n  // When a rat is clicked\n  selectRat(ratName, id) {\n    // Get the element for the current rat button\n    const element = document.getElementById(id);\n\n    // If it's already chosen, deselect it\n    if (this.state.selectedRats.indexOf(ratName) !== -1) {\n      const index = this.state.selectedRats.indexOf(ratName);\n      const newSelectedRats = this.state.selectedRats;\n      newSelectedRats.splice(index, 1);\n      this.setState({selectedRats: newSelectedRats});\n      element.classList.remove(\"selectedRat\");\n      if (this.state.selectedRats.length !== this.props.numRatsInGame - 1) {\n       this.multiContestantsLeft();\n      } else {\n        this.oneContestantLeft();\n      }\n      return;\n    }\n\n    // If you've already selected the max rats, you can't select another\n    if (this.state.selectedRats.length === this.props.numRatsInGame) {\n      return;\n    }\n\n    // Otherwise, select this rat\n    let newSelectedRats = this.state.selectedRats;\n    newSelectedRats.push(ratName);\n    element.classList.add(\"selectedRat\");\n\n    // If that was the final rat, display the advance button\n    if (this.state.selectedRats.length === this.props.numRatsInGame) {\n      this.noContestantsLeft();\n    } else if (this.state.selectedRats.length !== this.props.numRatsInGame - 1) {\n      this.multiContestantsLeft();\n    } else {\n      this.oneContestantLeft();\n    }\n\n    // Force a UI update for the rat list\n\n    this.setState({});\n  }\n\n  render() {\n    let ratsList = []\n    // Create a clickable div for every rat in the game\n    for (let i = 0; i < this.props.rats.length; i++) {\n      let filename = `/ratchelor/img/Frames/${this.props.rats[i].filename}.PNG`\n      let filenameHearts = `/ratchelor/img/Frames/hearts${(i  % 9) + 1}.PNG`\n      ratsList.push(\n        <div key={i} id=\"ratContainer\">\n          <div  id={`rat${i}`} className=\"ratListItem\" onClick={() => {\n            this.selectRat(this.props.rats[i].name, `rat${i}`);\n          }}>\n          <div className=\"ratPic\">\n            <img className=\"ratFrame\" src={filename} alt=\"\"/>\n            <img className=\"ratHearts\" src={filenameHearts} alt=\"\"/>\n          </div>\n          <div className=\"ratNameContainer\">\n          <div className=\"ratName\">{`${this.props.rats[i].name}`}</div>\n          <div className=\"ratTagline\">{`\"${this.props.rats[i].tagline}\"`}</div>\n          </div>\n        </div>\n        </div>\n      )\n    }\n    \n    return (\n      <div id=\"ratSelectScreen\" className=\"screen\">\n                {this.state.selectRatsButton}\n        <div id=\"ratListContainer\" className=\"stillRats\">{ratsList}</div>\n\n    </div>\n    );\n  }\n}\n\nexport default RatSelect;\n\n","import React from \"react\";\nimport responsesJson from '../responses.json';\n\nconst OFF_LEFT = -450;\nconst OFF_BOTTOM = -400;\nclass TalkingToRats extends React.Component {\n  constructor(props) {\n    super(props);\n    // Randomly shuffle the rats for this round\n    this.ratNames = props.activeRatNames.sort(function (a, b) { return 0.5 - Math.random() })\n    // Get all of the round's rats based on their names\n    this.activeRats = this.ratNames.map((ratName) => this.props.getRatByName(ratName));\n    // Store all of your canned responses in an array\n    this.responses = responsesJson;\n    this.charSpeed = 30;\n    this.ratMoveSpeed = 10;\n    this.state = {\n      ratIndex: 0,\n      charsRevealed: 0,\n      responses: [],\n      ratLeft: OFF_LEFT,\n      ratTop: 0,\n      dialogueBottom: OFF_BOTTOM,\n      incr: 1\n    }\n  }\n\n  componentDidMount() {\n    this.sendRatIn();\n   \n  }\n\n sendRatIn() {\n  this.getRandomResponses();\n  this.setState({incr: 25})\n  window.clearInterval(this.ratMoveOutInterval);\n    this.ratMoveInInterval = window.setInterval(() => {\n      if (this.state.ratLeft < 0) {\n        this.setState({ratLeft: this.state.ratLeft + this.state.incr})\n        if (this.state.dialogueBottom < 0) {\n          let dialogueBottom = this.state.dialogueBottom + this.state.incr;\n          if (dialogueBottom > 0) dialogueBottom = 0;\n          this.setState({incr: this.state.incr * 0.95});\n          this.setState({dialogueBottom})\n        }\n      } else {\n        window.clearInterval(this.ratMoveInInterval);\n        this.startTextMoving();\n      }\n    }, this.ratMoveSpeed);\n  }\n\n  sendRatOut() {\n    window.clearInterval(this.ratMoveInInterval);\n    this.setState({responses: \"\", incr: 1})\n    this.ratMoveOutInterval = window.setInterval(() => {\n      if (this.state.ratLeft > OFF_LEFT) {\n        this.setState({ratLeft: this.state.ratLeft - this.state.incr})\n        if (this.state.dialogueBottom > OFF_BOTTOM) {\n          let dialogueBottom = this.state.dialogueBottom - this.state.incr;\n          if (dialogueBottom < OFF_BOTTOM) dialogueBottom = OFF_BOTTOM;\n          this.setState({dialogueBottom})\n          this.setState({incr: this.state.incr * 1.05});\n        }\n      } else {\n        window.clearInterval(this.ratMoveOutInterval);\n        this.setState({charsRevealed: 0})\n        this.setNextRat();\n      }\n    }, this.ratMoveSpeed);\n  }\n\n  startTextMoving() {\n    this.setState({charsRevealed: 0});\n    this.textInterval = window.setInterval(() => {\n      let charsRevealed = this.state.charsRevealed + 1;\n      if (charsRevealed > this.activeRats[this.state.ratIndex].dialogue[this.props.round].length) {\n      } else {\n        this.setState({charsRevealed})\n      }\n    }, this.charSpeed)\n  }\n\n  setNextRat() {\n    let newRatIndex = this.state.ratIndex + 1;\n    // If that was the last rat, advance to the rose ceremony\n    if (newRatIndex === this.ratNames.length) {\n      this.props.goToRoseCeremony();\n    } else {\n      this.setState ({ratIndex: newRatIndex})\n      this.props.changeCurrentRatIdx(newRatIndex);\n    }\n    this.sendRatIn();\n  }\n\n  // After you submit your response, choose a new rat\n  submitResponse() {\n    window.clearInterval(this.textInterval)\n    this.sendRatOut();\n  }\n\n  getRandomResponses() {\n    // Make sure we get random, different responses\n    const numResponses = 3;\n    // Shuffle all responses\n    responsesJson.sort( () => .5 - Math.random() )\n    let responses = [];\n    // Choose the first n\n    for (let i = 0; i < numResponses; i++) {\n      let responseText = responsesJson[i]\n      let responseDiv = <button onClick={this.submitResponse.bind(this)} key={i}>{responseText}</button>\n      responses.push(responseDiv);\n    }\n    this.setState({responses});\n  }\n\n  // You get a random rat, they talk to you, you can respond, after you respond another rat shows up\n  render() {\n    let ratDialogue = this.activeRats[this.state.ratIndex].dialogue[this.props.round].substring(0, this.state.charsRevealed);\n    if (ratDialogue.length === 0) ratDialogue = \"...\";\n    return (\n      <div id=\"talkingToRatsScreen\" className=\"screen\">\n      <img id=\"playerRat\" \n      alt=\"you as a rat, on the couch\"\n      src={`/ratchelor/img/Couch/you.png`}></img>\n      <img id=\"talkingRat\" \n      alt=\"a rat on the couch who is talking to you\"\n      style={{left: `${this.state.ratLeft}px`, top: `${this.state.ratTop}px`}}\n      src={`/ratchelor/img/Couch/${this.activeRats[this.state.ratIndex].filename}.png`}></img>\n      <div id=\"dialogueContainer\" style={{bottom: `${this.state.dialogueBottom}px`}}>\n        <div id=\"ratName\">{this.activeRats[this.state.ratIndex].name}</div>\n        <div id=\"ratDialogue\">{ratDialogue}</div>\n      </div>\n      <div id=\"responses\" style={{bottom: `${this.state.dialogueBottom + 10}px`}}>{this.state.responses}</div>\n    </div>\n    );\n  }\n}\n\nexport default TalkingToRats;\n\n","import React from \"react\";\n\nclass RoseCeremony extends React.Component {\n  constructor(props) {\n    super(props);\n    // Randomly shuffle the rats for this round\n    this.ratNames = props.activeRatNames.sort(function (a, b) { return 0.5 - Math.random() })\n    // Get all of the round's rats based on their names\n    this.activeRats = this.ratNames.map((ratName) => this.props.getRatByName(ratName));\n    // How many roses you have to give out\n    this.numRoses = this.props.numRoses;\n\n    this.state = {\n      selectedRats: [],\n      giveRosesButton: \"\"\n    }\n  }\n\n  // When a rat is clicked\n  selectRat(ratName, id) {\n    // Get the element for the current rat button\n    const element = document.getElementById(id);\n\n    // If it's already chosen, deselect it\n    if (this.state.selectedRats.indexOf(ratName) !== -1) {\n      const index = this.state.selectedRats.indexOf(ratName);\n      const newSelectedRats = this.state.selectedRats;\n      newSelectedRats.splice(index, 1);\n      this.setState({selectedRats: newSelectedRats});\n      element.classList.remove(\"selectedRat\");\n      this.setState({giveRosesButton: \"\"})\n      return;\n    }\n\n    // If you've already selected the max rats, you can't select another\n    if (this.state.selectedRats.length === this.numRoses) {\n      return;\n    }\n\n    // Otherwise, select this rat\n    let newSelectedRats = this.state.selectedRats;\n    newSelectedRats.push(ratName);\n    element.classList.add(\"selectedRat\");\n\n    // If that was the final rat, display the advance button\n    if (this.state.selectedRats.length === this.numRoses) {\n      let giveRosesButton;\n      if (this.numRoses === 1){\n        giveRosesButton = <button onClick={this.endRoseCeremony.bind(this)}>Choose Contestant</button>;\n      }\n      else{\n        giveRosesButton = <button onClick={this.endRoseCeremony.bind(this)}>Choose Contestants</button>;\n      }\n      this.setState({giveRosesButton});\n      \n    } else {\n      this.setState({giveRosesButton: \"\"});\n    }\n\n    // Force a UI update for the rat list\n    this.setState({});\n  }\n\n  endRoseCeremony() {\n    this.props.setActiveRats(this.state.selectedRats);\n    this.props.advanceState();\n  }\n\n  render() {\n    let ratsList = []\n    // Create a clickable div for every rat in the game\n    for (let i = 0; i < this.activeRats.length; i++) {\n      let filename = `/ratchelor/img/Characters/${this.activeRats[i].filename}.png`\n      ratsList.push(\n        <div key={i} id={`rat${i}`} className=\"ratList\" onClick={() => {\n            this.selectRat(this.activeRats[i].name, `rat${i}`);\n          }}>\n          {/* {`${this.activeRats[i].name}`} */}\n          <img className=\"ratPic\" src={filename} alt=\"a rat waiting for you to make a decision\"/>\n          <img className=\"rosePic\" src=\"/ratchelor/img/temprose.png\" alt=\"a rose\" />\n        </div>\n      )\n    }\n    let roseContainer = []\n    for (let i = 0; i < this.props.numRoses - this.state.selectedRats.length; i++) {\n      roseContainer.push(<img className=\"roseIcon\" src=\"/ratchelor/img/temprose.png\" alt=\"a rose\"></img>)\n    }\n    return (\n      <div id=\"roseCeremonyScreen\" className=\"screen\">\n        <div id=\"roseContainer\">{roseContainer}</div>\n        <div id=\"ratListContainer\"> {ratsList}</div>\n        <div id=\"giveRosesButton\"> {this.state.giveRosesButton}</div>\n    </div>\n    );\n  }\n}\n\nexport default RoseCeremony;\n\n","import React from \"react\";\n\n\nclass AnimeEnding extends React.Component {\n\n  render() {\n    return (\n      <div id=\"animeEndingScreen\" className=\"screen\">\n        <img id=\"animePic\" src={`/ratchelor/img/Anime/${this.props.finalRat.filename}.jpg`} alt=\"your chosen rat looking adoringly at you\"></img>\n        <div id=\"animeText\"> {this.props.finalRat.dialogue[this.props.finalRat.dialogue.length - 1]}</div>\n        <button id=\"restartButton\" onClick={this.props.restartGame}>Restart?</button>\n    </div>\n    );\n  }\n}\n\nexport default AnimeEnding;\n\n","export default __webpack_public_path__ + \"static/media/Cheerful.d940b0ce.mp3\";","export default __webpack_public_path__ + \"static/media/Funky.a0bb99de.mp3\";","export default __webpack_public_path__ + \"static/media/Intense.557a862d.mp3\";","export default __webpack_public_path__ + \"static/media/Intro_Screen.0e89e7f0.mp3\";","export default __webpack_public_path__ + \"static/media/Paris.03b97a6d.mp3\";","export default __webpack_public_path__ + \"static/media/Pop.0f90351b.mp3\";","export default __webpack_public_path__ + \"static/media/Romantic_Happy.36d11f79.mp3\";","export default __webpack_public_path__ + \"static/media/Romantic_Sad.5b6aab94.mp3\";","export default __webpack_public_path__ + \"static/media/Rose_Ceremony.0f71f4d4.mp3\";","import React from \"react\";\nimport Sound from 'react-sound';\n\nimport Cheerful from '../sounds/Cheerful.mp3'\nimport Funky from '../sounds/Funky.mp3'\nimport Intense from '../sounds/Intense.mp3'\nimport IntroScreen from '../sounds/Intro_Screen.mp3'\nimport Paris from '../sounds/Paris.mp3'\nimport Pop from '../sounds/Pop.mp3'\nimport RomanticHappy from '../sounds/Romantic_Happy.mp3'\nimport RomanticSad from '../sounds/Romantic_Sad.mp3'\nimport RoseCeremony from '../sounds/Rose_Ceremony.mp3'\nimport Talking1 from '../sounds/Talking_To_Rat_1.mp3'\nimport Talking2 from '../sounds/Talking_To_Rat_2.mp3'\nimport Talking3 from '../sounds/Talking_To_Rat_3.mp3'\nimport Talking4 from '../sounds/Talking_To_Rat_4.mp3'\nimport {RAT_SELECT, TALKING_TO_RATS, ROSE_CEREMONY, ANIME_ENDING} from '../App'\n\nconst TalkingMusic = [Talking1, Talking2, Talking3, Talking4];\nconst Endings = {\n  CHEERFUL: Cheerful,\n  FUNKY: Funky,\n  INTENSE: Intense,\n  PARIS: Paris,\n  POP: Pop,\n  ROMANTICHAPPY: RomanticHappy,\n  ROMANTICSAD: RomanticSad\n}\n\nclass MusicManager extends React.Component {\n\n  render() {\n\n    let url;\n\n    switch (this.props.phase){\n      case RAT_SELECT:\n        url = IntroScreen;\n        break;\n      case TALKING_TO_RATS:\n        url = TalkingMusic[this.props.currentRatIdx % TalkingMusic.length];\n        break;\n      case ROSE_CEREMONY:\n        url = RoseCeremony;\n        break;\n      case ANIME_ENDING:\n        url = Endings[this.props.finalRat.ending];\n        break;\n      default:\n        url = null;\n    }\n    if(url){\n      return (\n        <Sound\n          url={url}\n          playStatus={Sound.status.PLAYING}\n          playFromPosition={0}\n          onLoading={this.handleSongLoading}\n          onPlaying={this.handleSongPlaying}\n          onFinishedPlaying={this.handleSongFinishedPlaying}\n          loop={true}\n        />\n      );\n    } \n    return (<></>)\n  }\n}\n\nexport default MusicManager;\n\n","export default __webpack_public_path__ + \"static/media/Talking_To_Rat_1.b359ab59.mp3\";","export default __webpack_public_path__ + \"static/media/Talking_To_Rat_2.fcfc13d8.mp3\";","export default __webpack_public_path__ + \"static/media/Talking_To_Rat_3.fbf0c31f.mp3\";","export default __webpack_public_path__ + \"static/media/Talking_To_Rat_4.e49c91ea.mp3\";","import \"./App.css\";\nimport React from \"react\";\nimport IntroScreen from \"./components/IntroScreen\";\nimport RatSelect from \"./components/RatSelect\";\nimport TalkingToRats from \"./components/TalkingToRats\";\nimport RoseCeremony from \"./components/RoseCeremony\";\nimport AnimeEnding from \"./components/AnimeEnding\";\nimport MusicManager from \"./components/MusicManager\";\n\nimport ratsJson from './rats.json';\n\n// Game Stages\nconst INTRO = 0;\nconst RAT_SELECT = 1;\nconst TALKING_TO_RATS = 2;\nconst ROSE_CEREMONY = 3;\nconst ANIME_ENDING = 4;\nconst SPECIAL_ENDING = 5;\n\nclass RatchelorGame extends React.Component {\n  constructor() {\n    super();\n    // Num rats the person should select at the very beginning\n    this.numRatsInGame = 7;\n    // How many rounds there are\n    this.numRounds = 5;\n    // How many roses get given out each round\n    this.rosesPerRound = [5, 4, 3, 2, 1];\n    this.state = {\n      // What phase of the game we're in\n      gameStage: INTRO,\n      // What round of the rose-talking loop we're on\n      roundNum: 0,\n      // String list of all rat names currently still in the game\n      activeRatNames: [],\n      // Text for interlude screens that fall down\n      interludeText: \"Round 1\",\n      //the rat that we r currently talking to\n      currentRatIdx: 0\n    };\n    this.changeCurrentRatIdx = this.changeCurrentRatIdx.bind(this);\n  }\n\n  // Reset everything to restart the game\n  restartGame() {\n    this.setState({\n      gameStage: INTRO,\n      roundNum: 0,\n      activeRatNames: []\n    })\n  }\n\n  changeCurrentRatIdx(idx){\n    this.setState({\n      currentRatIdx: idx\n    })\n  }\n\n  // Takes a string rat name and returns the Json object with additional details\n  getRatByName(name) {\n    for (let i = 0; i < ratsJson.length; i++) {\n      if (ratsJson[i].name === name) {\n        return ratsJson[i];\n      }\n    }\n  }\n\n  render() {\n    let screen = \"\";\n    if (this.state.gameStage === INTRO) {\n      // Intro screen: advances to next stage when complete\n      screen = <IntroScreen onClick={() => {this.setState({gameStage: RAT_SELECT})}}/> \n\n    } else if (this.state.gameStage === RAT_SELECT) {\n      // Rat select screen: \n      //    modifies the currently active rat names\n      //    advances to the next stage when complete\n      screen = <RatSelect \n          rats={ratsJson} \n          numRatsInGame={this.numRatsInGame} \n          advanceState={() => this.setState({gameStage: TALKING_TO_RATS})}\n          setActiveRats={(selectedRats) => {this.setState({activeRatNames: selectedRats});}}\n          />\n    } else if (this.state.gameStage === TALKING_TO_RATS) {\n      // Talking to rats screen:\n      //    advances to the rose ceremony when done\n      screen = <TalkingToRats\n          activeRatNames={this.state.activeRatNames}\n          getRatByName={this.getRatByName}\n          round={this.state.roundNum}\n          goToRoseCeremony={() => this.setState({gameStage: ROSE_CEREMONY})}\n          changeCurrentRatIdx={this.changeCurrentRatIdx}\n        />\n    } else if (this.state.gameStage === ROSE_CEREMONY) {\n      // Rose ceremony screen:\n      //    either advances to the next talking round, or advances to the anime ending\n      //    modifies the currently active rat names\n      screen = \n        <RoseCeremony\n          activeRatNames={this.state.activeRatNames}\n          getRatByName={this.getRatByName}\n          numRoses={this.rosesPerRound[this.state.roundNum]}\n          setActiveRats={(selectedRats) => {this.setState({activeRatNames: selectedRats});}}\n          advanceState={() => {\n            // Update the current round number\n            const newRoundNum = this.state.roundNum + 1;\n            // If that was the last round, advance to Anime\n            if (newRoundNum === this.numRounds) {\n              this.setState({gameStage: ANIME_ENDING});\n            // Else, keep talking to rats\n            } else {\n              this.setState({gameStage: TALKING_TO_RATS, roundNum: newRoundNum})\n            }\n          }}\n        />\n    } else if (this.state.gameStage === ANIME_ENDING) {\n      // Anime ending screen:\n      //    allows game to be restarted\n      screen = \n        <AnimeEnding\n          finalRat={this.getRatByName(this.state.activeRatNames[0])}\n          restartGame={this.restartGame.bind(this)}\n        />\n   \n    }\n    return (\n      <div id=\"game\">\n        <img id=\"frame\" src=\"/ratchelor/img/frameSmaller.png\" alt=\"\"></img>\n        <div id=\"interludeContainer\">\n        <div id=\"interlude\">\n          <div id=\"interludeText\">{this.state.interludeText}</div>\n        </div>\n        {screen}\n        </div>\n        <MusicManager \n          phase={this.state.gameStage} \n          finalRat={this.getRatByName(this.state.activeRatNames[0])} \n          currentRatIdx={this.state.currentRatIdx} \n        />\n       </div>\n    )\n  }\n}\n\n\nexport {INTRO, RAT_SELECT, TALKING_TO_RATS, ROSE_CEREMONY, ANIME_ENDING, SPECIAL_ENDING};\nexport default RatchelorGame;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}